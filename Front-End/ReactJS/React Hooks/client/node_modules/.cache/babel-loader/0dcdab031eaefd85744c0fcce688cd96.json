{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marti\\\\Desktop\\\\SoftUni\\\\Front-End\\\\ReactJS\\\\React Hooks\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { TaskContext } from './contexts/TaskContext';\nimport useFetch from './hooks/useFetch';\nimport useTodosApi from './hooks/useTodos';\nimport TaskList from './components/TaskList';\nimport CreateTask from './components/CreateTask';\nimport styles from './App.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks, isLoading] = useFetch('http://localhost:3030/jsonstore/todos', []);\n  const {\n    removeTodo,\n    createTodo,\n    updateTodo\n  } = useTodosApi();\n\n  const taskCreateHandler = async newTask => {\n    const createdTask = await createTodo(newTask);\n    setTasks(state => [...state, createdTask, ``]);\n  };\n\n  const taskDeleteHandler = async taskId => {\n    await removeTodo(taskId);\n    setTasks(state => state.filter(x => x._id != taskId));\n  };\n\n  const toggleTask = async task => {\n    const updatedTask = { ...task,\n      isCompleted: !task.isCompleted\n    };\n    await updateTodo(task._id, updatedTask);\n    setTasks(state => state.map(x => x._id == task._id ? updatedTask : x));\n  };\n\n  const taskEditHandler = async (task, newTitle) => {\n    const updatedTask = { ...task,\n      title: newTitle\n    };\n    await updateTodo(task._id, updatedTask);\n    setTasks(state => state.map(x => x._id == task._id ? updatedTask : x));\n  };\n\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: {\n      tasks,\n      taskDeleteHandler,\n      toggleTask,\n      taskEditHandler\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles['site-wrapper'],\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"TODO App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(TaskList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(CreateTask, {\n          taskCreateHandler: taskCreateHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"XvIMcxZHtyOvqri9khhSPoXdxmc=\", false, function () {\n  return [useFetch, useTodosApi];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["TaskContext","useFetch","useTodosApi","TaskList","CreateTask","styles","App","tasks","setTasks","isLoading","removeTodo","createTodo","updateTodo","taskCreateHandler","newTask","createdTask","state","taskDeleteHandler","taskId","filter","x","_id","toggleTask","task","updatedTask","isCompleted","map","taskEditHandler","newTitle","title"],"sources":["C:/Users/marti/Desktop/SoftUni/Front-End/ReactJS/React Hooks/client/src/App.js"],"sourcesContent":["import { TaskContext } from './contexts/TaskContext';\nimport useFetch from './hooks/useFetch';\nimport useTodosApi from './hooks/useTodos';\n\nimport TaskList from './components/TaskList';\nimport CreateTask from './components/CreateTask';\nimport styles from './App.module.css';\n\nfunction App() {\n    const [tasks, setTasks, isLoading] = useFetch('http://localhost:3030/jsonstore/todos', []);\n    const { removeTodo, createTodo, updateTodo } = useTodosApi();\n\n    const taskCreateHandler = async (newTask) => {\n        const createdTask = await createTodo(newTask);\n\n        setTasks(state => [\n            ...state,\n            createdTask,``\n        ]);\n    };\n\n    const taskDeleteHandler = async (taskId) => {\n        await removeTodo(taskId);\n\n        setTasks(state => state.filter(x => x._id != taskId));\n    };\n\n    const toggleTask = async (task) => {\n        const updatedTask = { ...task, isCompleted: !task.isCompleted };\n\n        await updateTodo(task._id, updatedTask);\n\n        setTasks(state => state.map(x => x._id == task._id ? updatedTask : x))\n    };\n\n    const taskEditHandler = async (task, newTitle) => {\n        const updatedTask = { ...task, title: newTitle };\n\n        await updateTodo(task._id, updatedTask);\n\n        setTasks(state => state.map(x => x._id == task._id ? updatedTask : x))\n    }\n\n    return (\n        <TaskContext.Provider value={{ tasks, taskDeleteHandler, toggleTask, taskEditHandler }}>\n            <div className={styles['site-wrapper']}>\n\n                <header>\n                    <h1>TODO App</h1>\n                </header>\n\n                <main>\n                    {isLoading\n                        ? <p>Loading...</p>\n                        : <TaskList />\n                    }\n\n                    <CreateTask taskCreateHandler={taskCreateHandler} />\n                </main>\n            </div>\n        </TaskContext.Provider>\n    );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,wBAA5B;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AAEA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACX,MAAM,CAACC,KAAD,EAAQC,QAAR,EAAkBC,SAAlB,IAA+BR,QAAQ,CAAC,uCAAD,EAA0C,EAA1C,CAA7C;EACA,MAAM;IAAES,UAAF;IAAcC,UAAd;IAA0BC;EAA1B,IAAyCV,WAAW,EAA1D;;EAEA,MAAMW,iBAAiB,GAAG,MAAOC,OAAP,IAAmB;IACzC,MAAMC,WAAW,GAAG,MAAMJ,UAAU,CAACG,OAAD,CAApC;IAEAN,QAAQ,CAACQ,KAAK,IAAI,CACd,GAAGA,KADW,EAEdD,WAFc,EAED,EAFC,CAAV,CAAR;EAIH,CAPD;;EASA,MAAME,iBAAiB,GAAG,MAAOC,MAAP,IAAkB;IACxC,MAAMR,UAAU,CAACQ,MAAD,CAAhB;IAEAV,QAAQ,CAACQ,KAAK,IAAIA,KAAK,CAACG,MAAN,CAAaC,CAAC,IAAIA,CAAC,CAACC,GAAF,IAASH,MAA3B,CAAV,CAAR;EACH,CAJD;;EAMA,MAAMI,UAAU,GAAG,MAAOC,IAAP,IAAgB;IAC/B,MAAMC,WAAW,GAAG,EAAE,GAAGD,IAAL;MAAWE,WAAW,EAAE,CAACF,IAAI,CAACE;IAA9B,CAApB;IAEA,MAAMb,UAAU,CAACW,IAAI,CAACF,GAAN,EAAWG,WAAX,CAAhB;IAEAhB,QAAQ,CAACQ,KAAK,IAAIA,KAAK,CAACU,GAAN,CAAUN,CAAC,IAAIA,CAAC,CAACC,GAAF,IAASE,IAAI,CAACF,GAAd,GAAoBG,WAApB,GAAkCJ,CAAjD,CAAV,CAAR;EACH,CAND;;EAQA,MAAMO,eAAe,GAAG,OAAOJ,IAAP,EAAaK,QAAb,KAA0B;IAC9C,MAAMJ,WAAW,GAAG,EAAE,GAAGD,IAAL;MAAWM,KAAK,EAAED;IAAlB,CAApB;IAEA,MAAMhB,UAAU,CAACW,IAAI,CAACF,GAAN,EAAWG,WAAX,CAAhB;IAEAhB,QAAQ,CAACQ,KAAK,IAAIA,KAAK,CAACU,GAAN,CAAUN,CAAC,IAAIA,CAAC,CAACC,GAAF,IAASE,IAAI,CAACF,GAAd,GAAoBG,WAApB,GAAkCJ,CAAjD,CAAV,CAAR;EACH,CAND;;EAQA,oBACI,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAE;MAAEb,KAAF;MAASU,iBAAT;MAA4BK,UAA5B;MAAwCK;IAAxC,CAA7B;IAAA,uBACI;MAAK,SAAS,EAAEtB,MAAM,CAAC,cAAD,CAAtB;MAAA,wBAEI;QAAA,uBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAFJ,eAMI;QAAA,WACKI,SAAS,gBACJ;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADI,gBAEJ,QAAC,QAAD;UAAA;UAAA;UAAA;QAAA,QAHV,eAMI,QAAC,UAAD;UAAY,iBAAiB,EAAEI;QAA/B;UAAA;UAAA;UAAA;QAAA,QANJ;MAAA;QAAA;QAAA;QAAA;MAAA,QANJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAmBH;;GAtDQP,G;UACgCL,Q,EACUC,W;;;KAF1CI,G;AAwDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}